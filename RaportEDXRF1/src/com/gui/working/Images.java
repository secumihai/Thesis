package com.gui.working;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



import com.database.*;
import com.gui.log.Loading;


import java.io.File;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.*;

import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;



public class Images extends javax.swing.JFrame  implements Runnable {
    private int hour,minutes,seconds;
    private JFileChooser j;
    private ManageAccount manageAccount;
    private ManageImage manageImage;
    private String fileName;
    List<Account> account;
    private Thread t=null;
    /**
     * Creates new form Images
     */
    public Images() {
        super("Fișiere Foto");
        setResizable(false);
        initComponents();
        currentDate();
        t= new Thread(this);
        t.start();
        fileName=null;
        j = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        manageAccount = new ManageAccount();
        manageImage = new ManageImage();
        account= manageAccount.listUsers(Loading.username);
        showFiles(Loading.username);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        grouRadioBtn = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        DataTableData = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        sampleNumberText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionText = new javax.swing.JTextArea();
        updateBtn = new javax.swing.JButton();
        openFileBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        photoLbl = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        saveMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        backMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        closeMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        deleteMenuItem = new javax.swing.JMenuItem();
        updateMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        dateTxt = new javax.swing.JMenu();
        timeTxt = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DataTableData.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Nr. d/o", "Numărul probei", "Imaginea", "Descrierea", "Image"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                    false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DataTableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DataTableDataMouseClicked(evt);
            }
        });
        DataTableData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DataTableDataKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(DataTableData);
        if (DataTableData.getColumnModel().getColumnCount() > 0) {
            DataTableData.getColumnModel().getColumn(4).setMinWidth(0);
            DataTableData.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)), "Încărcarea Imaginilor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(0, 102, 204))); // NOI18N

        sampleNumberText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sampleNumberText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sampleNumberTextActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setText("Descrierea articolelor  ");

        deleteBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/file.png"))); // NOI18N
        deleteBtn.setText("Șterge");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        backBtn.setText("Meniul Principal");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        saveBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        saveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save_mic.png"))); // NOI18N
        saveBtn.setText("Salvează");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        descriptionText.setColumns(20);
        descriptionText.setRows(5);
        jScrollPane1.setViewportView(descriptionText);

        updateBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        updateBtn.setText("Resetați datele");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        openFileBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        openFileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/photo_mic.png"))); // NOI18N
        openFileBtn.setText("Alege Imaginea....");
        openFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel1.setText("Numărul probei");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 255)));

        photoLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        photoLbl.setForeground(new java.awt.Color(0, 51, 153));
        photoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        photoLbl.setText("Foto");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(photoLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(photoLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(jLabel2)
                                                                .addComponent(openFileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(saveBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(updateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(116, 116, 116)
                                                .addComponent(sampleNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(sampleNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(openFileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );

        jMenu1.setForeground(new java.awt.Color(153, 0, 153));
        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        saveMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save_mic.png"))); // NOI18N
        saveMenuItem.setText("Salvează");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenuItem);
        jMenu1.add(jSeparator1);

        backMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        backMenuItem.setText("Înapoi la Meniul Principal");
        backMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(backMenuItem);
        jMenu1.add(jSeparator3);

        closeMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Close.png"))); // NOI18N
        closeMenuItem.setText("Close");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(closeMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setForeground(new java.awt.Color(153, 0, 153));
        jMenu2.setText("Edit");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        deleteMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/file.png"))); // NOI18N
        deleteMenuItem.setText("Şterge");
        deleteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(deleteMenuItem);

        updateMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        updateMenuItem.setText("Resetați datele");
        updateMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(updateMenuItem);
        jMenu2.add(jSeparator2);

        jMenuBar1.add(jMenu2);

        dateTxt.setForeground(new java.awt.Color(153, 0, 153));
        dateTxt.setText("Data");
        dateTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jMenuBar1.add(dateTxt);

        timeTxt.setForeground(new java.awt.Color(153, 0, 153));
        timeTxt.setText("Timpul");
        timeTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jMenuBar1.add(timeTxt);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void backMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        setVisible(false);
        Home home = new Home();
        home.setVisible(true);
    }

    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        System.exit(0);
    }

    private void deleteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void updateMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void openFileBtnActionPerformed(java.awt.event.ActionEvent evt) {
        String location = AppPrefs.FileLocation.get(System.getProperty("user.home"));
        j.setCurrentDirectory(new File(location));
        j.removeChoosableFileFilter(j.getAcceptAllFileFilter());
        FileFilter imageFilter = new FileNameExtensionFilter(
                "Image files", ImageIO.getReaderFileSuffixes());
        j.setFileFilter(imageFilter);
        int returnValue = j.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = j.getSelectedFile();
            fileName= selectedFile.getParentFile().getAbsolutePath()+"\\"+selectedFile.getName();
            AppPrefs.FileLocation.put(selectedFile.getParentFile().getAbsolutePath());
            try{
                ImageIcon imageIcon = new ImageIcon(new ImageIcon(fileName).getImage().getScaledInstance(photoLbl.getWidth(),photoLbl.getHeight(), java.awt.Image.SCALE_SMOOTH));
                photoLbl.setIcon(imageIcon);
                photoLbl.setText("");
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }

        }
    }

    private void sampleNumberTextActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        setVisible(false);
        Home home = new Home();
        home.setVisible(true);
    }

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if(fileName==null || fileName.isEmpty() || sampleNumberText.getText()==null || sampleNumberText.getText().isEmpty()
                || descriptionText.getText()==null || descriptionText.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Completaţi toate câmpurile și încărcați o imagine",
                    "Lipsesc Date", JOptionPane.WARNING_MESSAGE);
        }else {
            if(manageImage.listOfImages(fileName, Loading.username).size()==0) {
                if(manageImage.listImages(sampleNumberText.getText(), Loading.username).size()==0) {
                    manageImage.addNewImage(fileName, sampleNumberText.getText(), descriptionText.getText(), account.get(0));
                    showFiles(Loading.username);
                    fileName = "";
                    sampleNumberText.setText("");
                    descriptionText.setText("");
                    photoLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                    photoLbl.setForeground(new java.awt.Color(0, 51, 153));
                    photoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    photoLbl.setText("Foto");
                    photoLbl.setIcon(null);
                }else{
                    JOptionPane.showMessageDialog(this, "Numărul probei există deja în Baza de Date. Verificați Datele.",
                            "EROARE", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Imagine deja existentă în Baza de Date. Verificați Datele.",
                        "EROARE", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void DataTableDataMouseClicked(java.awt.event.MouseEvent evt) {
        complete();
    }

    private void DataTableDataKeyReleased(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
        complete();
    }

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        int row= DataTableData.getSelectedRow();
        DefaultTableModel model =(DefaultTableModel) DataTableData.getModel();
        if(row<0){
            JOptionPane.showMessageDialog(this, "Nu aţi selectat nici o probă",
                    "Lipsesc Date", JOptionPane.WARNING_MESSAGE);
        }else {
            String num = DataTableData.getModel().getValueAt(row, 0).toString();
            String cell = DataTableData.getModel().getValueAt(row, 4).toString();
            String sampleNumber = sampleNumberText.getText();
            String description = descriptionText.getText();
            List<Image> listOfImage = manageImage.listOfImages(cell, Loading.username);
            try {
                Object[] options = {"Da", "Nu"};
                int n = JOptionPane.showOptionDialog(this,
                        "Doriţi să Resetați Proba cu numărul de ordine " +num+"?",
                        "Întrebare",
                        JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null,
                        options,
                        options[1]);
                if(n==0) {
                    manageImage.updateImage(listOfImage.get(0).getPhotoId(), fileName, sampleNumber, description);
                    showFiles(Loading.username);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        int row= DataTableData.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(this, "Nu aţi selectat nici un Fişier",
                    "Lipsesc Date", JOptionPane.WARNING_MESSAGE);
        }else {
            String cell = DataTableData.getModel().getValueAt(row, 4).toString();
            List<Image> listOfImage = manageImage.listOfImages(cell, Loading.username);
            String sampleNumber = sampleNumberText.getText();

            try {
                Object[] options = {"Da", "Nu"};
                int n = JOptionPane.showOptionDialog(this,
                        "Doriţi să ştergeţi Fişierul " +sampleNumber+"?",
                        "Întrebare",
                        JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null,
                        options,
                        options[1]);
                if(n==0) {
                    JOptionPane.showMessageDialog(null, "Fişierul "+sampleNumber+" a fost şters din Baza de Date!!!");
                    manageImage.deleteFiles(listOfImage.get(0).getPhotoId());
                    showFiles(Loading.username);
                    fileName = "";
                    sampleNumberText.setText("");
                    descriptionText.setText("");
                    photoLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                    photoLbl.setForeground(new java.awt.Color(0, 51, 153));
                    photoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    photoLbl.setText("Foto");
                    photoLbl.setIcon(null);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                //if ("Nimbus".equals(info.getName())) {
                //    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                //  break;
                //}
                UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");

            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Images.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Images.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Images.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Images.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Images().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JTable DataTableData;
    private javax.swing.JButton backBtn;
    private javax.swing.JMenuItem backMenuItem;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JMenu dateTxt;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JTextArea descriptionText;
    private javax.swing.ButtonGroup grouRadioBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JButton openFileBtn;
    private javax.swing.JLabel photoLbl;
    private javax.swing.JTextField sampleNumberText;
    private javax.swing.JButton saveBtn;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JMenu timeTxt;
    private javax.swing.JButton updateBtn;
    private javax.swing.JMenuItem updateMenuItem;
    // End of variables declaration


    @Override
    public void run() {
        try {
            while (true) {
                Calendar cal = new GregorianCalendar();
                seconds = cal.get(Calendar.SECOND);
                minutes = cal.get(Calendar.MINUTE);
                hour = cal.get(Calendar.HOUR);

                SimpleDateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
                Date date = cal.getTime();
                String time = dateFormat.format(date);
                timeTxt.setText(" Ora: " + time);
                t.sleep(10);
            }
        }catch (Exception e){}
    }

    public void currentDate(){
        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year =  cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);
        dateTxt.setText(String.format("Data : %02d/%02d/%04d",day,(month+1),year));


    }

    public void showFiles(String username){
        List<Image> list = manageImage.listOfImages(username);
        DefaultTableModel model = (DefaultTableModel) DataTableData.getModel();
        model.setRowCount(0);


        Object [] row = new Object[5];
        for (int i = 0; i <list.size() ; i++) {
            String [] photo = list.get(i).getPhotoPath().split(Pattern.quote("\\"));
            row[0]= (i+1);
            row[1] = list.get(i).getSampleNumber();
            row[2]=  photo[photo.length-1];
            row[3]= list.get(i).getDescription();
            row[4]= list.get(i).getPhotoPath();
            model.addRow(row);
        }
        DataTableData.setModel(model);
        model.fireTableDataChanged();
        /**/
        DataTableData.getColumnModel().getColumn(4).setMinWidth(0);
        DataTableData.getColumnModel().getColumn(4).setMaxWidth(0);

    }

    public void complete(){
        int i = DataTableData.getSelectedRow();
        TableModel model = DataTableData.getModel();
        sampleNumberText.setText(model.getValueAt(i, 1).toString());
        descriptionText.setText(model.getValueAt(i, 3).toString());
        fileName= model.getValueAt(i, 4).toString();
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(model.getValueAt(i, 4).toString()).getImage().getScaledInstance(photoLbl.getWidth(),photoLbl.getHeight(), java.awt.Image.SCALE_SMOOTH));
        photoLbl.setIcon(imageIcon);
        photoLbl.setText("");
    }

}


